// Generated by CoffeeScript 1.6.2
var Lightbox, PhotoGrid, animating, importedLayers, setup, unzoomPhoto, zoomPhoto;

importedLayers = Framer.Importer.load("imported/Feed");

Framer.Shortcuts.initialize(importedLayers);

Framer.Defaults.Animation.curve = "spring(400,30,0)";

Lightbox = Layers.Lightbox;

PhotoGrid = Layers.PhotoGrid;

Lightbox.visible = true;

Lightbox.opacity = 0;

Lightbox.style.pointerEvents = "none";

PhotoGrid.width = 640;

animating = false;

setup = function(grid) {
  grid.imageLayer = grid.getChild("Image");
  grid.feedFrame = grid.frame;
  grid.imageLayer.feedFrame = grid.imageLayer.frame;
  grid.imageRatio = grid.imageLayer.width / grid.imageLayer.height;
  return grid.finalHeight = Phone.width / grid.imageRatio;
};

zoomPhoto = function(grid) {
  if (animating) {
    return;
  }
  animating = true;
  grid.feedScreenFrame = grid.screenFrame();
  grid.superLayer = Phone;
  grid.bringToFront();
  grid.frame = grid.feedScreenFrame;
  Lightbox.fadeIn();
  grid.animateTo({
    x: 0,
    y: (Phone.height - grid.finalHeight) / 2,
    width: 640,
    height: grid.finalHeight
  }, function() {
    animating = false;
    return grid.draggable.enabled = true;
  });
  return grid.imageLayer.animateTo({
    x: 0,
    y: 0,
    width: 640,
    height: grid.finalHeight
  });
};

unzoomPhoto = function(grid) {
  if (animating) {
    return;
  }
  animating = true;
  Lightbox.fadeOut();
  grid.draggable.enabled = false;
  grid.imageLayer = grid.getChild("Image");
  grid.imageLayer.animateTo({
    x: grid.imageLayer.feedFrame.x,
    y: grid.imageLayer.feedFrame.y,
    width: grid.imageLayer.feedFrame.width,
    height: grid.imageLayer.feedFrame.height
  });
  return grid.animateTo({
    x: grid.feedScreenFrame.x,
    y: grid.feedScreenFrame.y,
    width: grid.feedScreenFrame.width,
    height: grid.feedScreenFrame.height
  }, function() {
    grid.superLayer = PhotoGrid;
    grid.frame = grid.feedFrame;
    return animating = false;
  });
};

PhotoGrid.subLayers.forEach(function(grid) {
  grid.style.boxShadow = "0 1px 4px rgba(0,0,0,0.5)";
  setup(grid);
  grid.on(Events.Click, function() {
    if (grid.width === 640) {
      return unzoomPhoto(grid);
    } else {
      return zoomPhoto(grid);
    }
  });
  grid.draggable.speed.x = 0;
  grid.draggable.enabled = false;
  grid.on(Events.DragMove, function() {
    var lastDelta, yDelta;

    lastDelta = _.last(grid.draggable._deltas);
    if (lastDelta) {
      yDelta = Math.abs(lastDelta.y);
      return Lightbox.opacity = Framer.Shortcuts.convertRange(200, 0, yDelta, 0.2, 1, true);
    }
  });
  return grid.on(Events.DragEnd, function() {
    var lastDelta;

    lastDelta = _.last(grid.draggable._deltas);
    if (lastDelta && lastDelta.y > 10) {
      return unzoomPhoto(grid);
    }
  });
});
